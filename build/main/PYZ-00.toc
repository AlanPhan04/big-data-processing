('C:\\Users\\Alan Phan\\Desktop\\Bach Khoa '
 'Studies\\Tools\\DataPlatform\\spark_project_base\\build\\main\\PYZ-00.pyz',
 [('_compat_pickle',
   'D:\\miniconda3\\envs\\spark_base\\lib\\_compat_pickle.py',
   'PYMODULE'),
  ('_compression',
   'D:\\miniconda3\\envs\\spark_base\\lib\\_compression.py',
   'PYMODULE'),
  ('_py_abc', 'D:\\miniconda3\\envs\\spark_base\\lib\\_py_abc.py', 'PYMODULE'),
  ('_pydecimal',
   'D:\\miniconda3\\envs\\spark_base\\lib\\_pydecimal.py',
   'PYMODULE'),
  ('_strptime',
   'D:\\miniconda3\\envs\\spark_base\\lib\\_strptime.py',
   'PYMODULE'),
  ('_threading_local',
   'D:\\miniconda3\\envs\\spark_base\\lib\\_threading_local.py',
   'PYMODULE'),
  ('argparse',
   'D:\\miniconda3\\envs\\spark_base\\lib\\argparse.py',
   'PYMODULE'),
  ('ast', 'D:\\miniconda3\\envs\\spark_base\\lib\\ast.py', 'PYMODULE'),
  ('base64', 'D:\\miniconda3\\envs\\spark_base\\lib\\base64.py', 'PYMODULE'),
  ('bisect', 'D:\\miniconda3\\envs\\spark_base\\lib\\bisect.py', 'PYMODULE'),
  ('bz2', 'D:\\miniconda3\\envs\\spark_base\\lib\\bz2.py', 'PYMODULE'),
  ('calendar',
   'D:\\miniconda3\\envs\\spark_base\\lib\\calendar.py',
   'PYMODULE'),
  ('contextlib',
   'D:\\miniconda3\\envs\\spark_base\\lib\\contextlib.py',
   'PYMODULE'),
  ('contextvars',
   'D:\\miniconda3\\envs\\spark_base\\lib\\contextvars.py',
   'PYMODULE'),
  ('copy', 'D:\\miniconda3\\envs\\spark_base\\lib\\copy.py', 'PYMODULE'),
  ('csv', 'D:\\miniconda3\\envs\\spark_base\\lib\\csv.py', 'PYMODULE'),
  ('dataclasses',
   'D:\\miniconda3\\envs\\spark_base\\lib\\dataclasses.py',
   'PYMODULE'),
  ('datetime',
   'D:\\miniconda3\\envs\\spark_base\\lib\\datetime.py',
   'PYMODULE'),
  ('decimal', 'D:\\miniconda3\\envs\\spark_base\\lib\\decimal.py', 'PYMODULE'),
  ('dis', 'D:\\miniconda3\\envs\\spark_base\\lib\\dis.py', 'PYMODULE'),
  ('email',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\__init__.py',
   'PYMODULE'),
  ('email._encoded_words',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\_encoded_words.py',
   'PYMODULE'),
  ('email._header_value_parser',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\_header_value_parser.py',
   'PYMODULE'),
  ('email._parseaddr',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\_parseaddr.py',
   'PYMODULE'),
  ('email._policybase',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\_policybase.py',
   'PYMODULE'),
  ('email.base64mime',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\base64mime.py',
   'PYMODULE'),
  ('email.charset',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\charset.py',
   'PYMODULE'),
  ('email.contentmanager',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\contentmanager.py',
   'PYMODULE'),
  ('email.encoders',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\encoders.py',
   'PYMODULE'),
  ('email.errors',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\errors.py',
   'PYMODULE'),
  ('email.feedparser',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\feedparser.py',
   'PYMODULE'),
  ('email.generator',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\generator.py',
   'PYMODULE'),
  ('email.header',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\header.py',
   'PYMODULE'),
  ('email.headerregistry',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\headerregistry.py',
   'PYMODULE'),
  ('email.iterators',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\iterators.py',
   'PYMODULE'),
  ('email.message',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\message.py',
   'PYMODULE'),
  ('email.parser',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\parser.py',
   'PYMODULE'),
  ('email.policy',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\policy.py',
   'PYMODULE'),
  ('email.quoprimime',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\quoprimime.py',
   'PYMODULE'),
  ('email.utils',
   'D:\\miniconda3\\envs\\spark_base\\lib\\email\\utils.py',
   'PYMODULE'),
  ('fnmatch', 'D:\\miniconda3\\envs\\spark_base\\lib\\fnmatch.py', 'PYMODULE'),
  ('fractions',
   'D:\\miniconda3\\envs\\spark_base\\lib\\fractions.py',
   'PYMODULE'),
  ('getopt', 'D:\\miniconda3\\envs\\spark_base\\lib\\getopt.py', 'PYMODULE'),
  ('gettext', 'D:\\miniconda3\\envs\\spark_base\\lib\\gettext.py', 'PYMODULE'),
  ('gzip', 'D:\\miniconda3\\envs\\spark_base\\lib\\gzip.py', 'PYMODULE'),
  ('hashlib', 'D:\\miniconda3\\envs\\spark_base\\lib\\hashlib.py', 'PYMODULE'),
  ('importlib',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\__init__.py',
   'PYMODULE'),
  ('importlib._abc',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\_abc.py',
   'PYMODULE'),
  ('importlib._bootstrap',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\_bootstrap.py',
   'PYMODULE'),
  ('importlib._bootstrap_external',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\_bootstrap_external.py',
   'PYMODULE'),
  ('importlib.abc',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\abc.py',
   'PYMODULE'),
  ('importlib.machinery',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\machinery.py',
   'PYMODULE'),
  ('importlib.metadata',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\__init__.py',
   'PYMODULE'),
  ('importlib.metadata._adapters',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_adapters.py',
   'PYMODULE'),
  ('importlib.metadata._collections',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_collections.py',
   'PYMODULE'),
  ('importlib.metadata._functools',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_functools.py',
   'PYMODULE'),
  ('importlib.metadata._itertools',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_itertools.py',
   'PYMODULE'),
  ('importlib.metadata._meta',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_meta.py',
   'PYMODULE'),
  ('importlib.metadata._text',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\metadata\\_text.py',
   'PYMODULE'),
  ('importlib.readers',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\readers.py',
   'PYMODULE'),
  ('importlib.util',
   'D:\\miniconda3\\envs\\spark_base\\lib\\importlib\\util.py',
   'PYMODULE'),
  ('inspect', 'D:\\miniconda3\\envs\\spark_base\\lib\\inspect.py', 'PYMODULE'),
  ('ipaddress',
   'D:\\miniconda3\\envs\\spark_base\\lib\\ipaddress.py',
   'PYMODULE'),
  ('json',
   'D:\\miniconda3\\envs\\spark_base\\lib\\json\\__init__.py',
   'PYMODULE'),
  ('json.decoder',
   'D:\\miniconda3\\envs\\spark_base\\lib\\json\\decoder.py',
   'PYMODULE'),
  ('json.encoder',
   'D:\\miniconda3\\envs\\spark_base\\lib\\json\\encoder.py',
   'PYMODULE'),
  ('json.scanner',
   'D:\\miniconda3\\envs\\spark_base\\lib\\json\\scanner.py',
   'PYMODULE'),
  ('logging',
   'D:\\miniconda3\\envs\\spark_base\\lib\\logging\\__init__.py',
   'PYMODULE'),
  ('lzma', 'D:\\miniconda3\\envs\\spark_base\\lib\\lzma.py', 'PYMODULE'),
  ('numbers', 'D:\\miniconda3\\envs\\spark_base\\lib\\numbers.py', 'PYMODULE'),
  ('opcode', 'D:\\miniconda3\\envs\\spark_base\\lib\\opcode.py', 'PYMODULE'),
  ('optparse',
   'D:\\miniconda3\\envs\\spark_base\\lib\\optparse.py',
   'PYMODULE'),
  ('pathlib', 'D:\\miniconda3\\envs\\spark_base\\lib\\pathlib.py', 'PYMODULE'),
  ('pickle', 'D:\\miniconda3\\envs\\spark_base\\lib\\pickle.py', 'PYMODULE'),
  ('platform',
   'D:\\miniconda3\\envs\\spark_base\\lib\\platform.py',
   'PYMODULE'),
  ('plugins', '-', 'PYMODULE'),
  ('plugins.mongodb_plugin',
   'C:\\Users\\Alan Phan\\Desktop\\Bach Khoa '
   'Studies\\Tools\\DataPlatform\\spark_project_base\\src\\ingest\\plugins\\mongodb_plugin.py',
   'PYMODULE'),
  ('plugins.postgres_plugin',
   'C:\\Users\\Alan Phan\\Desktop\\Bach Khoa '
   'Studies\\Tools\\DataPlatform\\spark_project_base\\src\\ingest\\plugins\\postgres_plugin.py',
   'PYMODULE'),
  ('pprint', 'D:\\miniconda3\\envs\\spark_base\\lib\\pprint.py', 'PYMODULE'),
  ('psycopg2',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\__init__.py',
   'PYMODULE'),
  ('psycopg2._ipaddress',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\_ipaddress.py',
   'PYMODULE'),
  ('psycopg2._json',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\_json.py',
   'PYMODULE'),
  ('psycopg2._range',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\_range.py',
   'PYMODULE'),
  ('psycopg2.extensions',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\extensions.py',
   'PYMODULE'),
  ('psycopg2.extras',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\extras.py',
   'PYMODULE'),
  ('psycopg2.sql',
   'D:\\miniconda3\\envs\\spark_base\\lib\\site-packages\\psycopg2\\sql.py',
   'PYMODULE'),
  ('py_compile',
   'D:\\miniconda3\\envs\\spark_base\\lib\\py_compile.py',
   'PYMODULE'),
  ('quopri', 'D:\\miniconda3\\envs\\spark_base\\lib\\quopri.py', 'PYMODULE'),
  ('random', 'D:\\miniconda3\\envs\\spark_base\\lib\\random.py', 'PYMODULE'),
  ('selectors',
   'D:\\miniconda3\\envs\\spark_base\\lib\\selectors.py',
   'PYMODULE'),
  ('shutil', 'D:\\miniconda3\\envs\\spark_base\\lib\\shutil.py', 'PYMODULE'),
  ('signal', 'D:\\miniconda3\\envs\\spark_base\\lib\\signal.py', 'PYMODULE'),
  ('socket', 'D:\\miniconda3\\envs\\spark_base\\lib\\socket.py', 'PYMODULE'),
  ('statistics',
   'D:\\miniconda3\\envs\\spark_base\\lib\\statistics.py',
   'PYMODULE'),
  ('string', 'D:\\miniconda3\\envs\\spark_base\\lib\\string.py', 'PYMODULE'),
  ('stringprep',
   'D:\\miniconda3\\envs\\spark_base\\lib\\stringprep.py',
   'PYMODULE'),
  ('subprocess',
   'D:\\miniconda3\\envs\\spark_base\\lib\\subprocess.py',
   'PYMODULE'),
  ('tarfile', 'D:\\miniconda3\\envs\\spark_base\\lib\\tarfile.py', 'PYMODULE'),
  ('textwrap',
   'D:\\miniconda3\\envs\\spark_base\\lib\\textwrap.py',
   'PYMODULE'),
  ('threading',
   'D:\\miniconda3\\envs\\spark_base\\lib\\threading.py',
   'PYMODULE'),
  ('token', 'D:\\miniconda3\\envs\\spark_base\\lib\\token.py', 'PYMODULE'),
  ('tokenize',
   'D:\\miniconda3\\envs\\spark_base\\lib\\tokenize.py',
   'PYMODULE'),
  ('tracemalloc',
   'D:\\miniconda3\\envs\\spark_base\\lib\\tracemalloc.py',
   'PYMODULE'),
  ('typing', 'D:\\miniconda3\\envs\\spark_base\\lib\\typing.py', 'PYMODULE'),
  ('urllib',
   'D:\\miniconda3\\envs\\spark_base\\lib\\urllib\\__init__.py',
   'PYMODULE'),
  ('urllib.parse',
   'D:\\miniconda3\\envs\\spark_base\\lib\\urllib\\parse.py',
   'PYMODULE'),
  ('uu', 'D:\\miniconda3\\envs\\spark_base\\lib\\uu.py', 'PYMODULE'),
  ('uuid', 'D:\\miniconda3\\envs\\spark_base\\lib\\uuid.py', 'PYMODULE'),
  ('zipfile', 'D:\\miniconda3\\envs\\spark_base\\lib\\zipfile.py', 'PYMODULE')])
